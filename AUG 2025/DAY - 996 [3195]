** 3195. Find the Minimum Area to Cover All Ones I **

# Approach 1:
class Solution:
    def minimumArea(self, grid: List[List[int]]) -> int:
        rows, cols = len(grid), len(grid[0])
        min_row, max_row = rows, -1
        min_col, max_col = cols, -1

        for r in range(rows):
            for c in range(cols):
                if grid[r][c] == 1:
                    min_row = min(min_row, r)
                    max_row = max(max_row, r)
                    min_col = min(min_col, c)
                    max_col = max(max_col, c)

        if max_row == -1: 
            return 0

        return (max_row - min_row + 1) * (max_col - min_col + 1)

# Approach 2:
class Solution:
    def minimumArea(self, grid: List[List[int]]) -> int:
        
        cols = deque(map(sum, grid))
        while cols[ 0] == 0: cols.popleft()
        while cols[-1] == 0: cols.pop()
            
        rows = deque(map(sum,zip(*grid))) #<-- matrix transpose

        while rows[ 0] == 0: rows.popleft()
        while rows[-1] == 0: rows.pop()
   
        return len(rows) * len(cols)
