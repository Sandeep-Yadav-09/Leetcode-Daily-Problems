** 2438. Range Product Queries of Powers **

# Approach 1:
class Solution:
    def productQueries(self, n: int, queries: List[List[int]]) -> List[int]:
        MOD = 10**9 + 7
        arr = [1]
        for i in range(31):
            if 1 <<i & n:
                arr.append(1 << i)
        for i in range(1, len(arr)):
            arr[i] *= arr[i - 1]
        ans = []
        for a, b in queries:
            ans.append((arr[b + 1] // arr[a]) % MOD)
        return ans

# Approach 2:
class Solution:
    def productQueries(self, n: int, queries: List[List[int]]) -> List[int]:
        MOD = 10**9+7

        powers = []
        i = 0
        while n > 0:
            if n & 1:
                powers.append(1 << i) 
            n >>= 1
            i += 1

        prefix = [1]
        for p in powers:
            prefix.append(prefix[-1] * p)

        res = []
        for l, r in queries:
            res.append((prefix[r+1] // prefix[l]) % MOD)
        
        return res
