** 904. Fruit Into Baskets **

# Approach 1:
class Solution:
    def totalFruit(self, fruits: List[int]) -> int:
        n=len(fruits)
        freq=[0]*(max(fruits)+1)
        ans, cnt, baskets, l=0, 0, 0, 0
        for r, x in enumerate(fruits):
            freq[x]+=1
            if freq[x]==1: baskets+=1
            cnt+=1
            while baskets>2:
                y=fruits[l]
                freq[y]-=1
                if freq[y]==0: baskets-=1
                l+=1
                cnt-=1
            ans=max(ans, cnt)
        return ans

# Approach 2:
class Solution:
    def totalFruit(self, fruits: List[int]) -> int:
        dic = {}
        res = 0
        wstart = 0
        curr = 0
        for wend in range(len(fruits)):
            fruit = fruits[wend]
            if fruit not in dic:
                dic[fruit] = 0
            dic[fruit] += 1
            while len(dic) > 2 and wstart < wend:
                rfruit = fruits[wstart]
                dic[rfruit] -= 1
                if dic[rfruit] == 0:
                    del dic[rfruit]
                wstart += 1
            res = max(wend-wstart+1, res)
            
        return res
