** 2825. Make String a Subsequence Using Cyclic Increments **

# Approach 1:
class Solution:
    def canMakeSubsequence(self, str1: str, str2: str) -> bool:
        i, j = 0, 0  
        
        while i < len(str1) and j < len(str2):
            if str1[i] == str2[j] or chr((ord(str1[i]) - ord('a') + 1) % 26 + ord('a')) == str2[j]:
                j += 1  
            i += 1  
        
        return j == len(str2)

# Approach 2:
class Solution:
    def canMakeSubsequence(self, s: str, t: str) -> bool:
        i = 0
        for c in s:
            i += i<len(t) and (ord(t[i])-ord(c))%26<=1

        return i == len(t)
