** 2558. Take Gifts From the Richest Pile **

# Approach 1:
class Solution:
    def pickGifts(self, gifts: List[int], k: int) -> int:
        while k:
            gifts.sort(reverse=True)
            pile = gifts[0]
            gifts.pop(0)
            gifts.append(int(sqrt(pile)))
            k -= 1
        return sum(gifts)

# Approach 2:
from heapq import *

class Solution:
    def pickGifts(self, gifts: List[int], k: int) -> int:
        gifts = [-i for i in gifts]
        heapify(gifts)

        for i in range(k):
            current = heappop(gifts)
            current = int(abs(current) ** (1/2))

            heappush(gifts, -current)

        return -1 * sum(gifts)
