** 962. Maximum Width Ramp **

# Approach 1:
class Solution:
    def maxWidthRamp(self, nums: List[int]) -> int:
        stack = []
        n = len(nums)
        for i in range(n):
            if not stack or nums[i] < nums[stack[-1]]:
                stack.append(i)
        max_width = 0
        for j in range(n-1, -1, -1):
            while stack and nums[j] >= nums[stack[-1]]:
                max_width = max(max_width, j - stack.pop())
        return max_width

# Approach 2:
class Solution:
    def maxWidthRamp(self, nums: List[int]) -> int:
        n = len(nums)
        right_max = [0]*n
        right_max[n-1] = nums[n-1]

        for i in range(n-2, -1, -1):
            right_max[i] = max(right_max[i+1], nums[i])
        
        l, r, rslt = 0, 0 ,0

        while r<n:
            while l<r and nums[l] > right_max[r]:
                l += 1
            rslt = max(rslt, r-l)
            r += 1
        
        return rslt
