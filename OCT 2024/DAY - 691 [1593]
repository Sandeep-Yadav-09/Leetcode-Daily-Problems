** 1593. Split a String Into the Max Number of Unique Substrings **

# Approach 1:
class Solution:
    def maxUniqueSplit(self, s: str) -> int:
        def backtrack(start, seen):
            if start == len(s):
                return 0
            
            max_split = 0
            
            for end in range(start + 1, len(s) + 1):
                substring = s[start:end]
                if substring not in seen:
                    seen.add(substring)  
                    max_split = max(max_split, 1 + backtrack(end, seen))
                    seen.remove(substring)  
            return max_split
        
        return backtrack(0, set())

# Approach 2:
class Solution:
    def maxUniqueSplit(self, s: str) -> int:
        def f(s, d=set()):
            if s:
                res = 0
                for i in range(len(s)):
                    t = s[:i+1]
                    if t not in d:
                        d.add(t)
                        res = max(res, f(s[i+1:]))
                        d.remove(t)
                return res
            return len(d)
        return f(s)
