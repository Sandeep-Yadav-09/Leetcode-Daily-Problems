** 2406. Divide Intervals Into Minimum Number of Groups **

# Approach 1:
class Solution:
    def minGroups(self, intervals: List[List[int]]) -> int:
        events = []
        
        for interval in intervals:
            left, right = interval
            events.append((left, 1))   
            events.append((right + 1, -1))  
        
        events.sort()
        
        max_groups = 0
        current_groups = 0
        
        for _, event in events:
            current_groups += event 
            max_groups = max(max_groups, current_groups)
        
        return max_groups

# Approach 2:
from collections import defaultdict

class Solution:
    def minGroups(self, intervals: List[List[int]]) -> int:
        
        intervalMap = defaultdict(int)
        runner, output = 0, 0
        
        for start, end in intervals:
            intervalMap[start] += 1
            intervalMap[end+1] -= 1
        
        for key in sorted(intervalMap.keys()):
            runner += intervalMap[key]
            output = max(output, runner)
            
        return output
