** 91. Decode Ways **

# Approach 1:
class Solution:
    def numDecodings(self, s: str) -> int:
        dp = [0] * (len(s) + 1)             
        dp[0],dp[1]=1,1
        
        if s[0] == "0":            
            return 0
        for i in range(2, len(s) + 1):
            if 1<=int(s[i-1])<=9:
                dp[i] += dp[i - 1]
            if 10 <= int(s[i - 2] + s[i - 1]) <= 26 :
                dp[i]+=dp[i - 2] 
        return dp[-1]

# Approach 2:
class Solution:
    def numDecodings(self, s):
        if s == "0":
            return 0

        dp = [0 for _ in s]
        dp.append(1)

        dp[-2] = int(s[-1] != "0")

        i = len(s) - 2
        while i >= 0:
            if s[i] == "0":
                dp[i] = 0
            else:
                dp[i] = dp[i + 1]
                if (s[i] == "1") or (s[i] == "2" and int(s[i + 1]) < 7):
                    dp[i] += dp[i + 2]
            i -= 1
        
        return dp[0]
