** 1160. Find Words That Can Be Formed by Characters **

# Approach 1:
class Solution:
    def countCharacters(self, words: List[str], chars: str) -> int:
        tot = 0
        for w in words:
            d = {}
            for c in chars:
                if c in d: d[c] += 1
                else: d[c] = 1
             
            temp = 0
            for l in w:
                if l in d and d[l] > 0:
                    d[l] -= 1 
                    temp += 1
                else:
                    temp = 0
                    break
                    
            tot += temp
            
        return tot

# Approach 2:
class Solution:
    def countCharacters(self, words: List[str], chars: str) -> int:
        length=[]
        for i in words:
            for j in i:
                if chars.count(j) < i.count(j): 
                    break
            else:
                length.append(len(i))
        return sum(length)

# Approach 3:
class Solution:
    def countCharacters(self, words: List[str], chars: str) -> int:
        ans = 0
        for word in words:
            flag = 1
            for char in word:
                if chars.count(char) < word.count(char):
                    flag = 0
                    break
            if flag:
                ans += len(word)
        return ans
