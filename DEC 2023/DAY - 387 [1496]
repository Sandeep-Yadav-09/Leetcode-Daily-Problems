** 1496. Path Crossing **

# Approach 1:
class Solution:
    def isPathCrossing(self, path: str) -> bool:
        x, y = 0, 0
        visited = {(0, 0)}

        for direction in path:
            x += 1 if direction == 'E' else (-1 if direction == 'W' else 0)
            y += 1 if direction == 'N' else (-1 if direction == 'S' else 0)

            if (x, y) in visited:
                return True

            visited.add((x, y))

        return False

# Approach 2:
class Solution:
    def isPathCrossing(self, path: str) -> bool:
        d = {'N': [0,1], 'E':[1,0], 'W':[-1,0], 'S':[0,-1]}
        seen = set()
        seen.add((0,0))
        x,y = 0,0
        for i in path:
            x += d[i][0]
            y += d[i][1]
            if (x,y) not in seen:
                seen.add((x,y))
            else:
                return True
        return False
