** 1155. Number of Dice Rolls With Target Sum **

# Approach 1:
class Solution:
    def numRollsToTarget(self, d: int, f: int, target: int) -> int:
        memo = {}
        def dp(d, target):
            if d == 0:
                return 0 if target > 0 else 1
            if (d, target) in memo:
                return memo[(d, target)]
            to_return = 0
            for k in range(max(0, target-f), target):
                to_return += dp(d-1, k)
            memo[(d, target)] = to_return
            return to_return
        return dp(d, target) % (10**9 + 7)

# Approach 2:
class Solution:
    def numRollsToTarget(self, n: int, k: int, target: int) -> int:
        # set up the variables 
        t = target - n
        ret = 0
        l = 0
        m = 10**9 + 7
        # polynomial multiplication
        while l*k <= t:
            r = t - l*k # find the correct power of the second term
            #              first coefficient   |  second coefficient
            ret = (ret + ((-1)**l) * comb(n,l) * comb(r+n-1,n-1)) % m
            l += 1
        return ret
