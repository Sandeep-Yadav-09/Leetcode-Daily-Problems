** 1266. Minimum Time Visiting All Points **

# Approach 1:
class Solution:
    def minTimeToVisitAllPoints(self, points: List[List[int]]) -> int:
        steps = 0
        for i in range(len(points)-1):
            point = points[i]
            next_point = points[i+1]
            steps += max(abs(next_point[0] - point[0]), abs(next_point[1] - point[1]))
        return steps

# Approach 2:
class Solution:
    def minTimeToVisitAllPoints(self, points: List[List[int]]) -> int:
        def rule(A, B):
            return max(abs(A[0] - B[0]), abs(A[1] - B[1]))
        
        sum = 0
        
        for tup1, tup2 in zip(points[:-1], points[1:]):
            sum += rule(tup1, tup2)
        
        return sum

# Approach 3:
class Solution:
    def minTimeToVisitAllPoints(self, points: List[List[int]]) -> int:
        i = 1
        count = 0
        while i < len(points):
            diff0 = points[i][0] - points[i-1][0]
            diff1 = points[i][1] - points[i-1][1]
           
            count += max(abs(diff0), abs(diff1))
            i+=1
          
        return count
