** 1248. Count Number of Nice Subarrays **

# Approach 1:
class Solution:
    def numberOfSubarrays(self, nums: List[int], k: int) -> int:
        right ,left = 0,0
        ans = 0 
        odd_cnt = 0
        ans = 0
        cur_sub_cnt = 0
        for right in range(len(nums)):
            
            if nums[right]%2 == 1:
                odd_cnt += 1
                cur_sub_cnt = 0
                
            while odd_cnt == k:
                if nums[left]%2 == 1:
                    odd_cnt -= 1
                cur_sub_cnt += 1
                left += 1
                
            ans += cur_sub_cnt
            
        return ans  

# Approach 2:
class Solution:
    def numberOfSubarrays(self, nums: List[int], k: int) -> int:
        prefixsum=0
        dic=defaultdict(int)
        dic[0]=1
        ans=0
        for i in nums:
            if i%2==1:
                prefixsum+=1
            ans+=dic[prefixsum-k]
            dic[prefixsum]+=1
        return ans
