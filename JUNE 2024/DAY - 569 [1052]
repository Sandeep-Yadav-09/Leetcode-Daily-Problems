** 1052. Grumpy Bookstore Owner **

# Approach 1:
class Solution:
    def maxSatisfied(self, customers: List[int], grumpy: List[int], X: int) -> int:
        m = s = tmp = 0
        for i in range(len(customers)):
            if not grumpy[i]: 
                s += customers[i]               
                customers[i] = 0 
            else: tmp += customers[i]            
            if i>=X: tmp -= customers[i-X]      
            m = max(m, tmp)                
        return s+m

# Approach 2:
class Solution:
    def maxSatisfied(self, customers: List[int], grumpy: List[int], minutes: int) -> int:
        ans = 0
        for a in range(len(customers)):
            if(grumpy[a] == 0):
                ans += customers[a]        
        L, R = 0, 0
        converted = 0
        maximum = 0
        length = 0
        while R < len(customers):
            if(grumpy[R] == 1):
                converted += customers[R]
            length += 1
            while length == minutes:
                maximum = max(maximum, converted)
                if(grumpy[L] == 1):
                    converted -= customers[L]
                length -= 1
                L += 1
            R += 1
        return maximum + ans
