** 2785. Sort Vowels in a String **

# Approach 1:
class Solution:
    def sortVowels(self, s: str) -> str:
        vowel=[97,101,105,111,117,65,69,73,79,85]
        s=list(s)
        lis=[]
        ind=[]
        for i in range(len(s)):
            if ord(s[i]) in vowel:
                lis.append(ord(s[i]))
                ind.append(i)
        lis.sort()
        if len(lis)<2:          
            return "".join(s)
        
        for i in range(len(ind)):
            s[ind[i]]=chr(lis[i])

        return "".join(s)

# Approach 2:
class Solution:    
    def sortVowels(self, s: str) -> str:
        s, vowels, positions, vowSet = list(s), [], [], set(['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'])
    
        for i, c in enumerate(s):
            if c in vowSet:
                vowels.append(c)
                positions.append(i)
        
        vowels.sort()

        for i, c in zip(positions, vowels):
            s[i] = c
        
        return ''.join(s)

# Approach 3:
class Solution:
    VOWELS = frozenset('aeiouAEIOU')

    def sortVowels(self, s: str) -> str:
        vowels = sorted((c for c in s if c in self.VOWELS), reverse=True)
        return ''.join(c if c not in self.VOWELS else vowels.pop() for c in s)
