** 988. Smallest String Starting From Leaf **

# Approach 1:
class Solution:
    def smallestFromLeaf(self, root: Optional[TreeNode]) -> str:
        self.ans = ""
        self.dfs(root, "")
        return self.ans

    def dfs(self, root, current_string):
        if not root:
            return
        current_string = chr(root.val + ord('a')) + current_string

        if not root.left and not root.right:
            if not self.ans or self.ans > current_string:
                self.ans = current_string
        
        self.dfs(root.left, current_string)
        self.dfs(root.right, current_string)

# Approach 2:
class Solution:
    res = 'z' * 13        
    
    def smallestFromLeaf(self, root: TreeNode) -> str:
        
        def helper(node: TreeNode, prev):
            prev = chr(97 + node.val) + prev
            
            if not node.left and not node.right:
                self.res = min(self.res, prev)
                return
            
            if node.left:
                helper(node.left, prev)
            if node.right:
                helper(node.right, prev)
        
        helper(root, "")
        return self.res
