** 85. Maximal Rectangle **

# Approach 1:
class Solution:
    def maximalRectangle(self, matrix: List[List[str]]) -> int:
        if not matrix:
            return 0
        
        n = len(matrix[0])
        heights = [0] * (n + 1)
        max_area = 0

        for row in matrix:
            for i in range(n):
                heights[i] = heights[i] + 1 if row[i] == "1" else 0
            
            stack = [-1]
            for i in range(n + 1):
                while heights[i] < heights[stack[-1]]:
                    h = heights[stack.pop()]
                    w = i - stack[-1] - 1
                    max_area = max(max_area, h * w)
                
                stack.append(i)
        
        return max_area

# Approach 2:
class Solution:
    def maximalRectangle(self, matrix: List[List[str]]) -> int:
        if not matrix:
            return 0
        maxarea=0
        height=[0]*(len(matrix[0]))
        for i in range(len(matrix)):
            for j in range(len(matrix[0])):
                if matrix[i][j]=="1":
                    height[j]+=1
                else:
                    height[j]=0
				stack=[]
            for i,h in enumerate(height):
                start=i
                while stack and h<stack[-1][1]:
                    index,hi=stack.pop()
                    start=index
                    maxarea=max(maxarea,(i-index)*hi)
                stack.append([start,h])
            for i,h in stack:
                maxarea=max(maxarea,(len(height)-i)*h)
        return maxarea
