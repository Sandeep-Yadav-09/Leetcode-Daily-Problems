 ** 713. Subarray Product Less Than K **

# Approach 1:
class Solution:
    def numSubarrayProductLessThanK(self, nums: List[int], k: int) -> int:
        ans = 0
        l,product = 0,1

        for r,num in enumerate(nums):
            product *=num
            while product>=k and l<=r:
                product//=nums[l]
                l+=1
            ans+=r-l+1
        return ans

# Approach 2:
class Solution:
    def numSubarrayProductLessThanK(self, nums: List[int], k: int) -> int:
        result = 0
        left = 0
        current = 1
        for right in range(len(nums)):
            current *= nums[right]

            while left <= right:

                if current < k:
                    result += right - left + 1
                    break
                current /= nums[left]
                left += 1

        return result
