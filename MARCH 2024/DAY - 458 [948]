** 948. Bag of Tokens **

# Approach 1:
class Solution:
    def bagOfTokensScore(self, tokens: List[int], power: int) -> int:
        score=0
        tokens.sort()
        i=0
        j=len(tokens)-1
        mx=0
        while i<=j:
            if tokens[i]<=power:
                power-=tokens[i]
                score+=1
                i+=1
                mx=max(mx,score)
            elif score>0:
                score-=1
                power+=tokens[j]
                j-=1
            else:
                break
        return mx

# Approach 2:
class Solution:
    def bagOfTokensScore(self, tokens: List[int], power: int) -> int:
        tokens, ans, score = deque(sorted(tokens)), 0, 0
        while tokens:
            if tokens[0] <= power:
                power -= tokens.popleft()
                score += 1
                ans = max(ans, score)
            elif score > 0:
                power += tokens.pop()
                score -= 1
            else:
                return ans
        return ans
