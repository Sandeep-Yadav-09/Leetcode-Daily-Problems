** 1282. Group the People Given the Group Size They Belong To **

# Approach 1:
class Solution:
    def groupThePeople(self, groupSizes: List[int]) -> List[List[int]]:
        _dict_ = collections.defaultdict(list)

        for idx,i in enumerate(groupSizes):
            _dict_[i].append(idx)
        answer = []

        for key, lst in _dict_.items():
            for idx in range(0, len(lst), key):
                answer.append(lst[idx:idx + key])
        return (answer)	

# Approach 2:
class Solution:
    def groupThePeople(self, groupSizes: List[int]) -> List[List[int]]:
        groups = {}
        result = []
        
        for i, size in enumerate(groupSizes):
            if size not in groups:
                groups[size] = []
            groups[size].append(i)
            
            if len(groups[size]) == size:
                result.append(groups[size])
                groups[size] = []
                
        return result

# Approach 3:
class Solution:
    def groupThePeople(self, groupSizes: List[int]) -> List[List[int]]:
          map = {}
          finalGroup = []

          for i, value in enumerate(groupSizes):
              if value not in map:
                  map[value] = []

              map.get(value).append(i)
              if len(map.get(value)) == value:
                  finalGroup.append(map.get(value))
                  map[value] = []

          return finalGroup
        
