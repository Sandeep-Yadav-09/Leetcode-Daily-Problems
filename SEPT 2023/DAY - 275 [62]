** 62. Unique Paths **

# Approach 1:
class Solution:
    def uniquePaths(self, m: int, n: int) -> int:
        return math.comb(m+n-2, m-1)  # or math.comb(m+n-2, n-1)

# Approach 2:
class Solution:
    def uniquePaths(self, m: int, n: int) -> int:
        dp = [[1 if i == 0 or j == 0 else 0 for j in range(n)] for i in range(m)]
        
        for i in range(1, m):
            for j in range(1, n):
                dp[i][j] = dp[i-1][j] + dp[i][j-1]
                
        return dp[-1][-1]

# Approach 3:
class Solution:
    def uniquePaths(self, m: int, n: int) -> int:
        if n == 1: 
            return 1
        N = n + m - 2
        K = min(n - 1, m - 1)
        C=1
        for i in range(N,N-K, -1):
            C*=i
        for i in range(1, K+1):
            C//=i       
        return C
