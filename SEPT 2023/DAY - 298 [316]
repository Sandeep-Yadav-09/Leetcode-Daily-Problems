** 316. Remove Duplicate Letters **

# Approach 1:
class Solution:
    def removeDuplicateLetters(self, s: str) -> str:
        stack = []
        seen = set() 
        last_occ = {c: i for i, c in enumerate(s)}
        
        for i, c in enumerate(s):
            if c not in seen:
                
                while stack and c < stack[-1] and i < last_occ[stack[-1]]:
                    seen.discard(stack.pop())
                seen.add(c)
                stack.append(c)
        
        return ''.join(stack)

# Approach 2:
class Solution:
    def removeDuplicateLetters(self, text: str) -> str:
        stack , counter , visited = [] , {} , {}
        for letter in text:
            if letter not in visited:
                visited[letter] = False
                counter[letter] = 1
            else:
                counter[letter] += 1
        for letter in text:
            counter[letter] -= 1
            if visited[letter]:
                continue
            while stack and letter < stack[-1] and counter[stack[-1]] > 0:
                visited[stack[-1]] = False
                stack.pop()
            stack.append(letter)
            visited[letter] = True
        return "".join(stack)
