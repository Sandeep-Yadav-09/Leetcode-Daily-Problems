** 2707. Extra Characters in a String **

# Approach 1:
class Solution:
    def minExtraChar(self, s: str, dictionary: List[str]) -> int:
        max_val = len(s) + 1
        dp = [max_val] * (len(s) + 1)
        dp[0] = 0 
        dictionary_set = set(dictionary)

        for i in range(1, len(s) + 1):
            dp[i] = dp[i - 1] + 1

            for l in range(1, i + 1): 
                if s[i-l:i] in dictionary_set:
                    dp[i] = min(dp[i], dp[i-l])
                    
        return dp[-1]

# Approach 2:
class Solution:
    def minExtraChar(self, s: str, dictionary: List[str]) -> int:
        n = len(s)
        dp = [n] * (n+1)
        for i in range(1,n+1):
            for word in dictionary:
                if i >= len(word) and s[i - len(word):i] == word:
                    dp[i] = min(dp[i], dp[i-len(word)]-len(word))
            dp[i] = min(dp[i],dp[i-1])
        return dp[n]

# Approach 3:
class Solution:
    def minExtraChar(self, s: str, dictionary: List[str]) -> int:
        dictionary = set(dictionary)
        n,dp = len(s),[0]
        max_word_len = len(max(dictionary, key=len))
        for i in range(1,n+1):
            dp.append(dp[-1]+1)
            for j in range(i-1,max(i-max_word_len-1,-1),-1):
                if s[j:i] in dictionary:
                    dp[i] = min(dp[i],dp[j])
        return dp[-1]

        
