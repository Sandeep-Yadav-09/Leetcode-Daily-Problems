** 1128. Number of Equivalent Domino Pairs **

# Approach 1:
class Solution:
    def numEquivDominoPairs(self, dominoes: List[List[int]]) -> int:
        res, m = 0, {}
        for i in range(len(dominoes)):
            if dominoes[i][0]>dominoes[i][1]:
                tmp = dominoes[i][1]
                dominoes[i][1] = dominoes[i][0]
                dominoes[i][0] = tmp
            key = str(dominoes[i][0]) + "|" + str(dominoes[i][1])
            count = m.get(key, 0)
            count += 1
            m[key] = count
            res += count - 1
        print(f"{m}")
        return res

# Approach 2:
from collections import defaultdict

class Solution:
    def numEquivDominoPairs(self, dominoes: List[List[int]]) -> int:
        count = defaultdict(int)
        result = 0

        for a, b in dominoes:
            key = tuple(sorted((a, b)))
            result += count[key]
            count[key] += 1

        return result
