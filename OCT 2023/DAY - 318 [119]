** 119. Pascal's Triangle II **

# Approach 1:
class Solution:
    def getRow(self, rowIndex: int) -> List[int]:
        row = [1] * (rowIndex+1)
        if rowIndex == 0: return row
        prev_row = self.getRow(rowIndex-1)
        for i in range(1, len(row)-1):
            row[i] = prev_row[i-1] + prev_row[i]
        return row

# Approach 2:
class Solution:
    def getRow(self, rowIndex: int) -> List[int]:
        res=[]
        for i in range(rowIndex+1):
            res.append([])
            for j in range(i+1):
                if j == 0 or j == i:
                    res[i].append(1)
                else:
                    res[i].append(res[i - 1][j - 1] + res[i - 1][j])
        return res[rowIndex]
