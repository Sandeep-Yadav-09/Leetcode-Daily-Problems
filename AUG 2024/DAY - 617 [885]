** 885. Spiral Matrix III **

# Approach 1:
class Solution(object):
    def spiralMatrixIII(self, rows, cols, rStart, cStart):
        i,j = rStart, cStart

        diri, dirj = 0, 1 # directions to move
        twice = 2
        res = []
        moves = 1
        next_moves = 2

        while len(res) < (rows * cols):
            if (-1 < i < rows) and ( -1 < j < cols):
                res.append([i,j])
            
            i += diri
            j += dirj
            moves -= 1
            if moves == 0:
                diri, dirj = dirj, -diri # 90 deg Clockwise
                twice -= 1
                if twice == 0:
                    twice = 2
                    moves = next_moves
                    next_moves += 1
                else:
                    moves = next_moves - 1
        return res

# Approach 2:
class Solution(object):
    def spiralMatrixIII(self, R, C, r0, c0):
        i,j,step_size, sign, coordinates = r0, c0, 1, 1, [[r0, c0]]
        while len(coordinates) < R*C:
            for _ in range(step_size):
                j += sign
                if i < R and j < C and i >= 0 and j >= 0:
                    coordinates.append([i, j])
            for _ in range(step_size):
                i += sign
                if i < R and j < C and i >= 0 and j >= 0:
                    coordinates.append([i, j])   
            step_size += 1
            sign *= -1
        return coordinates
