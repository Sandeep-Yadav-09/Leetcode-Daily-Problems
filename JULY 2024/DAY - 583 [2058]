** 2058. Find the Minimum and Maximum Number of Nodes Between Critical Points **

# Approach 1:
class Solution:
    def nodesBetweenCriticalPoints(self, head: Optional[ListNode]) -> List[int]:
        temp,lst=head.next,[]
        prev=head
        i=1
        count=0
        while temp.next:
            if (prev.val<temp.val and temp.val>temp.next.val) or (prev.val>temp.val and temp.val<temp.next.val):
                lst.append(i)
                count+=1
            i+=1
            temp=temp.next
            prev=prev.next
        if count<2:
            return [-1,-1]
        else:
            res=[]
            min1=lst[-1]
            for i in range(len(lst)-1):
                min1=min(min1,(lst[i+1]-lst[i]))
            res.append(min1)    
            res.append(lst[-1]-lst[0])
        return res   

# Approach 2:
class Solution:
    def nodesBetweenCriticalPoints(self, head: ListNode) -> List[int]:
        ct, critPts, prev = 0, [], head.val                                                                                  
            if (prev-head.val)*(head.val-head.next.val) < 0:       
                critPts.append(ct)                                                                            
            prev, head = head.val, head.next                        
            ct+= 1

        n = len(critPts)                                           
        if n < 2: return [-1,-1]

        mn = min((critPts[i]-critPts[i-1] for i in range(1, n)))    
        mx = critPts[-1] - critPts[0]                               
        return [mn, mx]
