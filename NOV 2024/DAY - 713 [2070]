** 2070. Most Beautiful Item for Each Query **

# Approach 1:
class Solution:
    def maximumBeauty(self, items: List[List[int]], queries: List[int]) -> List[int]:
        items.sort(key = lambda n: -n[0])
        ans, max_beauty = [0] * len(queries), 0
        for i in sorted(range(len(queries)), key = lambda i: queries[i]):
            while items and items[-1][0] <= queries[i]:
                max_beauty = max(max_beauty, items.pop()[1])
            ans[i] = max_beauty
        return ans

# Approach 2:
class Solution(object):
    def maximumBeauty(self, items, queries):
        
        maxI = float('inf')
        res = [[0, 0, maxI]]
    
        items.sort(key=lambda x: x[0])

        for price, beauty in items:
            lastBracket = res[-1]
            if beauty > lastBracket[1]:
                res[-1][2] = price
                res.append([price, beauty, maxI])

        ans = []

        for x in queries:
            for i in range(len(res) - 1, -1, -1):
                if res[i][0] <= x:
                    ans.append(res[i][1])
                    break

        return ans
