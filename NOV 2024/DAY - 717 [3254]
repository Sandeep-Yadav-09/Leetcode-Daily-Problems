** 3254. Find the Power of K-Size Subarrays I **

# Approach 1:
class Solution:
    def resultsArray(self, nums: List[int], k: int) -> List[int]:
        n=len(nums)
        if n==1 or k==1: return nums
        ans=[-1]*(n-k+1)
        Len=1
        for r in range(1, n):
            Len=Len+1 if nums[r]==nums[r-1]+1 else 1
            if Len>=k: ans[r-k+1]=nums[r]
        return ans

# Approach 2:
class Solution(object):
    def resultsArray(self, nums, k):
        n = len(nums)

        if k == 1:
            return nums

        ans = []
        
        i, consecutiveSize = 1, 1
        
        while i < n:
            if nums[i] - 1 == nums[i - 1]:
                consecutiveSize += 1
            else:
                consecutiveSize = 1
            
            if i >= k - 1:
                if consecutiveSize >= k:
                    ans.append(nums[i])
                else:
                    ans.append(-1)
            
            i += 1
        return ans
