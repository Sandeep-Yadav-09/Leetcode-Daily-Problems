** 1406. Stone Game III **

# Approach 1:
class Solution:
    def dp(self,i,stoneValue,turn,dct):
        if i>=len(stoneValue):
            return 0
        if (i,turn) in dct:
            return dct[(i,turn)]
        if turn:
            mx=float("-infinity")
            for j in range(1,4):
                x=self.dp(i+j,stoneValue,False,dct)+sum(stoneValue[i:i+j])
                mx=max(mx,x)
            dct[(i,turn)]=mx
            return mx
        else:
            mn=float("infinity")
            for j in range(1,4):
                x=self.dp(i+j,stoneValue,True,dct)
                mn=min(mn,x)
            dct[(i,turn)]=mn
            return mn

    def stoneGameIII(self, stoneValue: List[int]) -> str:
        n=len(stoneValue)
        sm=sum(stoneValue)
        tot=self.dp(0,stoneValue,True,{})
        if sm-tot>tot:
            return "Bob"
        elif sm-tot<tot:
            return "Alice"
        return "Tie"

# Approach 2:
class Solution:
    def stoneGameIII(self, stoneValue: List[int]) -> str:
        
        def compare(x, y):
            if x < y:
                return -1
            elif x == y:
                return 0
                
            return 1
        size = len(stoneValue)
        
        memo = [0 for _ in range(3)]
        
        for i in range(size-1, -1, -1):
            memo[i%3] = max( sum(stoneValue[i:i+k]) - memo[(i+k)%3] for k in range(1,4) )
        
        return ("Tie", "Alice", "Bob")[compare( memo[0], 0)]        

# Approach 3:
class Solution:
    def stoneGameIII(self, stoneValue: List[int]) -> str:
        n=len(stoneValue)
        dp=[0]*(n+1)
        i=n-1
        
        while i>=0:
            ans=-1001
            ans=max(ans,stoneValue[i]-dp[i+1])
            
            if i+1<n:
                ans=max(ans,stoneValue[i]+stoneValue[i+1]-dp[i+2])
            
            if i+2<n:
                ans=max(ans,stoneValue[i]+stoneValue[i+1]+stoneValue[i+2]-dp[i+3])
            dp[i]=ans
            i-=1
                
        alice=dp[0]
        if alice>0:
            return "Alice"
        elif alice<0:
            return "Bob"
        else:
            return "Tie"
