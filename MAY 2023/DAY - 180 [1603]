** 1603. Design Parking System **

# Approach 1:
class ParkingSystem:
    def __init__(self, big, medium, small):
        self.A = [big, medium, small]

    def addCar(self, carType):
        self.A[carType - 1] -= 1
        return self.A[carType - 1] >= 0

# Approach 2:
class ParkingSystem:

    def __init__(self, big: int, medium: int, small: int):
        self.parking = [big, medium, small]
        print(self.parking)
        

    def addCar(self, carType: int) -> bool:
        def park(index):
            if self.parking[index]:
               self.parking[index] = self.parking[index] - 1
               return True
            else:
                return False
        match carType:
            case 1:
                return park(0)
            case 2:
                return park(1)
            case 3:
                return park(2)
        
# Approach 3:
class ParkingSystem:

    def __init__(self, big: int, medium: int, small: int):
        self.big = big
        self.medium = medium
        self.small = small

    def addCar(self, carType: int) -> bool:
        if carType == 1:
            if self.big > 0:
                self.big -= 1
                return True
            else:
                return False

        if carType == 2:
            if self.medium > 0:
                self.medium -= 1
                return True
            else:
                return False

        if carType == 3:
            if self.small > 0:
                self.small -= 1
                return True
            else:
                return False
        
