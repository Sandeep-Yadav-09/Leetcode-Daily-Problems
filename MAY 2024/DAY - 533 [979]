** 979. Distribute Coins in Binary Tree **

# Approach 1:
class Solution:
    def distributeCoins(self, root: Optional[TreeNode]) -> int:
        cnt = 0
        def dfs(root):
            nonlocal cnt
            left = dfs(root.left) if root.left else 0
            right = dfs(root.right) if root.right else 0
            root.val += left + right
            cnt += abs(left) + abs(right)
            return root.val - 1
        
        dfs(root)

        return cnt 

# Approach 2:
class Solution:
    def distributeCoins(self, root: TreeNode) -> int:
        self.ans = 0
        def dfs(node):
            if not node: return 0        
            l, r = dfs(node. left), dfs(node.right)
            self.ans+= abs(l)+abs(r)
            return node.val + l + r -1    
        dfs(root)
        return self.ans
