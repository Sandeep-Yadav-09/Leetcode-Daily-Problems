** 3068. Find the Maximum Sum of Node Values **

# Approach 1:
class Solution:
    def maximumValueSum(self, nums: List[int], k: int, edges: List[List[int]]) -> int:

        dif = sorted(map(lambda x: x - (x^k), nums)) 
        
        return sum(nums) - sum(filter(lambda x: x < 0, map(sum, zip(dif[::2],dif[1::2]))))

# Approach 2:
class Solution:
    def maximumValueSum(self, nums: list[int], k: int, edges: list[list[int]]) -> int:
        import sys
        n = len(nums)
        cnt = 0
        sac = sys.maxsize 
        total_sum = 0
        
        for num in nums:
            x = num
            y = num ^ k
            if x > y:
                total_sum += x
            else:
                total_sum += y
                cnt += 1
            sac = min(sac, abs(x - y))
        
        if cnt % 2 == 1:
            total_sum -= sac
        
        return total_sum
