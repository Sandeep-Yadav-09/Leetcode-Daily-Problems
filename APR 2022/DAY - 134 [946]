** 946. Validate Stack Sequences **

# Approach 1:
class Solution:
    def validateStackSequences(self, pushed: List[int], popped: List[int]) -> bool:
        stack = []
        for i in pushed:
            stack.append(i)
            while stack and popped and stack[-1] == popped[0]:
                stack.pop()
                popped.pop(0)
        return not stack

# Approach 2:
class Solution:
    def validateStackSequences(self, pushed, popped):
        i = j = 0
        for x in pushed:
            pushed[i] = x
            while i >= 0 and pushed[i] == popped[j]:
                i, j = i - 1, j + 1
            i += 1
        return i == 0

# Approach 3:
class Solution:
    def validateStackSequences(self, pushed, popped):
        stack = []
        j = 0
        for x in pushed:
            stack.append(x)
            while stack and stack[-1] == popped[j]:
                j += 1
                stack.pop()
        return len(stack) == 0
        
# Approach 4:
class Solution:
    def validateStackSequences(self, pushed: List[int], popped: List[int]) -> bool:
        stack=[pushed[0]]
        i=0  #for tracking the index of 
        j=1
        while i<len(popped):
            if len(stack)>0 and stack[-1]==popped[i]:
                stack.pop(-1)
                i+=1
            elif j>=len(pushed):
                break
            else:
                stack.append(pushed[j])
                j+=1
        if len(popped)==i:
            return True
        return False
