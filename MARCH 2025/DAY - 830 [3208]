** 3208. Alternating Groups II **

# Approach 1:
class Solution:
    def numberOfAlternatingGroups(self, colors: List[int], k: int) -> int:
        colors.extend(colors[:(k-1)])  
        count = 0
        left = 0

        for right in range(len(colors)):
            if right > 0 and colors[right] == colors[right - 1]:
                left = right  
            
            if right - left + 1 >= k:
                count += 1  
        
        return count

# Approach 2:
class Solution:
    def numberOfAlternatingGroups(self, a: List[int], k: int) -> int:
        b = chain([0],(i for (i,v),(j,u) in pairwise(enumerate(a+a[:k])) if v==u),[len(a)+k-1])
        return sum(max(0,j-i-k+1) for i,j in pairwise(b))
