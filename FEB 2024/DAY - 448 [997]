** 997. Find the Town Judge **

# Approach 1:
class Solution:
    def findJudge(self, n: int, trust: List[List[int]]) -> int:
        trust_to, trusted = defaultdict(int), defaultdict(int)

        for a, b in trust:
            trust_to[a] += 1
            trusted[b] += 1
        
        for i in range(1, n+1):
            if trust_to[i] == 0 and trusted[i] == n - 1:
                return i
        
        return -1

# Approach 2:
class Solution:
    def findJudge(self, n: int, trust: List[List[int]]) -> int:
        dg = [0] * (n + 1)
        for a, b in trust:
            dg[a] -= 1 # out
            dg[b] += 1 # in
        return next((i for i in range(1, n + 1) if dg[i] == n - 1), -1)
