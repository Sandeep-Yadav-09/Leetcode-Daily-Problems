** 3494. Find the Minimum Amount of Time to Brew Potions **

# Approach 1:
class Solution:
    def minTime(self, skill: List[int], mana: List[int]) -> int:
        n, m = len(skill), len(mana)
        done = [0] * (n + 1)
        
        for j in range(m):
            for i in range(n):
                done[i + 1] = max(done[i + 1], done[i]) + mana[j] * skill[i]
            for i in range(n - 1, 0, -1):
                done[i] = done[i + 1] - mana[j] * skill[i]
                
        return done[n]

# Approach 2:
class Solution:
    def minTime(self, a: List[int], b: List[int]) -> int:
        q = [0]*(len(a)+1)
        for p in b:
            qq = [0,*accumulate(v*p for v in a)]
            dt = max(map(sub,q[1:],qq))
            q = [t+dt for t in qq]

        return q[-1]
