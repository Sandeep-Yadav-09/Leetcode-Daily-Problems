** 735. Asteroid Collision **

# Approach 1:
class Solution:
    def asteroidCollision(self, asteroids: List[int]) -> List[int]:
        stack = []
        for a in asteroids:
            while stack and stack[-1] > 0 > a:
                if stack[-1] < abs(a):
                    stack.pop()
                    continue
                elif stack[-1] == abs(a):
                    stack.pop()
                break
            else:
                stack.append(a)
        
        return stack

# Approach 2:
class Solution:
    def asteroidCollision(self, asteroids: List[int]) -> List[int]:
        j = 0
        n = len(asteroids)

        for i in range(n):
            asteroid = asteroids[i]
            while j > 0 and asteroids[j - 1] > 0 and asteroid < 0 and asteroids[j - 1] < abs(asteroid):
                j -= 1

            if j == 0 or asteroid > 0 or asteroids[j - 1] < 0:
                asteroids[j] = asteroid
                j += 1
            elif asteroids[j - 1] == abs(asteroid):
                j -= 1
        return asteroids[:j]

# Approach 3:
class Solution:
    def asteroidCollision(self, asteroids: List[int]) -> List[int]:
        for i in range(len(asteroids)):
            if asteroids[i] < 0:
                for j in range(i - 1 , - 1 , -1):
                    if asteroids[j] > 0:
                        if abs(asteroids[j]) > abs(asteroids[i]):
                            asteroids[i] = 0
                        elif abs(asteroids[j]) < abs(asteroids[i]):
                            asteroids[j] = 0
                        else:
                            asteroids[i] = asteroids[j] = 0
        return [i for i in asteroids if i != 0]
