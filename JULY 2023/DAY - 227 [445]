** 445. Add Two Numbers II **

# Approach 1:
class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        s1,s2=0,0     
        while l1!=None:
            s1=s1*10+l1.val
            l1=l1.next
        
        while l2!=None:
            s2=s2*10+l2.val
            l2=l2.next   
        dummylist=dummy=ListNode(0)
        
        for i in str(s1+s2):
            dummy.next=ListNode(i)
            dummy=dummy.next

        return dummylist.next

# Approach 2:
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        st1, st2 = [], []

        while l1:
            st1.append(l1.val)
            l1 = l1.next
        while l2:
            st2.append(l2.val)
            l2 = l2.next

        nextNode, remainder = None, 0
        while st1 or st2 or remainder:
            v1 = st1.pop() if st1 else 0
            v2 = st2.pop() if st2 else 0
            remainder, val = divmod(v1 + v2 + remainder, 10)
            node = ListNode(val, nextNode)
            nextNode = node
        
        return node

# Approach 3:
class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
	
        n1 = n2 = 0
        ptr1, ptr2 = l1, l2
        stack = []
        
        while ptr1: n1 += 1; ptr1 = ptr1.next
        while ptr2: n2 += 1; ptr2 = ptr2.next
        max_len = max(n1, n2)
        
        while max_len:
            a = b = 0
            if max_len <= n1: a = l1.val; l1 = l1.next
            if max_len <= n2: b = l2.val; l2 = l2.next
            stack.append(a + b)
            max_len -= 1
        
        sumval, head = 0, None
        while stack or sumval:
            if stack: sumval += stack.pop()
            node = ListNode(sumval % 10)
            node.next = head
            head = node
            sumval //= 10
        return head
