** 1726. Tuple with Same Product **

# Approach 1:
class Solution:
    def tupleSameProduct(self, nums: List[int]) -> int:
        products = {}
        ans, n = 0, len(nums)

        for i in range(n):
            for j in range(i + 1, n):
                prod = nums[i] * nums[j]
                ans += products.get(prod, 0)
                products[prod] = products.get(prod, 0) + 1

        return ans * 8

# Approach 2:
class Solution:
    def tupleSameProduct(self, nums: List[int]) -> int:
        productFreq = defaultdict(int)
        res = 0
        n = len(nums)
        for i in range(n):
            for j in range(i + 1, n):
                product = nums[i] * nums[j]
                productFreq[product] += 1
        for count in productFreq.values():
            if count > 1:
                res += (count * (count - 1)) // 2
        return res * 8
