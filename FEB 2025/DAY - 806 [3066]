** 3066. Minimum Operations to Exceed Threshold Value II **

# Approach 1:
class Solution:
    def minOperations(self, nums: List[int], k: int) -> int:
        pq = list(nums)
        heapq.heapify(pq)
        op = 0
        while len(pq) > 1:
            x = heapq.heappop(pq)
            y = heapq.heappop(pq)
            if x >= k:
                return op
            n = 2 * min(x, y) + max(x, y)
            heapq.heappush(pq, n)
            op += 1
        return op

# Approach 2:
class Solution:
    def minOperations(self, nums: List[int], k: int) -> int:
        ans = 0
        arr = SortedList(nums)
        while len(arr) > 1 and k > arr[0]:
            ans += 1
            arr.add((arr[0] * 2) + arr[1])
            arr.discard(arr[1])
            arr.discard(arr[0])
        return ans
