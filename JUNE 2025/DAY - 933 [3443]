** 3443. Maximum Manhattan Distance After K Changes **

# Approach 1:
class Solution:
    def maxDistance(self, s: str, k: int) -> int:
        res = 0
        for dirr in 'NE','SE','SW','NW':
            kk, dist = k, 0
            for c in s:
                dist += c in dirr or kk>0 or -1
                kk -= c not in dirr
                res = max(res, dist)
        
        return res

# Approach 2:
class Solution:
    def maxDistance(self, s: str, k: int) -> int:
        x,y,ans=0,0,0
        for idx,ch in enumerate(s):
            if ch=='N': y+=1
            if ch=='S': y-=1
            if ch=='W': x-=1
            if ch=='E': x+=1
            ans=max(ans,min(abs(x)+abs(y)+2*k,idx+1))
        return ans
