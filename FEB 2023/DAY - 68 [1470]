** 1470. Shuffle the Array **

# Approach 1:
class Solution:
    def shuffle(self, nums: List[int], n: int) -> List[int]:
            res = []
            for i, j in zip(nums[:n],nums[n:]):
                res += [i,j]
            return res
                
# Approach 2:
class Solution:
    def shuffle(self, nums: List[int], n: int) -> List[int]:
        res = [0]*(2*n)        
        i,j,idx = 0,n,0

        while idx < len(res):
            res[idx] = nums[i]
            idx += 1
            res[idx] = nums[j]
            idx += 1
            i += 1
            j += 1
        return res

# Approach 3:
class Solution:    
    def shuffle(self, nums: List[int], n: int) -> List[int]:
        getDesireIdx = lambda i: i*2 if i<n else (i-n)*2+1
        for i in range(2*n):
            j=i
            while nums[i]>=0:
                j=getDesireIdx(j)
                nums[i],nums[j]=nums[j],-nums[i]
        for i in range(2*n):
            nums[i]=-nums[i]
        return nums
