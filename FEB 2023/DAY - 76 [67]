** 67. Add Binary **

# Approach 1:
class Solution:
    def addBinary(self, a: str, b: str) -> str:
        if len(a)==0: 
            return b

        if len(b)==0: 
            return a

        if a[-1] == '1' and b[-1] == '1':
            return self.addBinary(self.addBinary(a[0:-1],b[0:-1]),'1')+'0'
        
        if a[-1] == '0' and b[-1] == '0':
            return self.addBinary(a[0:-1],b[0:-1])+'0'
        else:
            return self.addBinary(a[0:-1],b[0:-1])+'1'
            
# Approach 2:
class Solution:
    def addBinary(self, a: str, b: str) -> str:
        aL, bL = -len(a), -len(b)
        i, carry, res = -1, 0, ""

        while i >= aL or i >= bL:
            aBit = int(a[i]) if i >= aL else 0
            bBit = int(b[i]) if i >= bL else 0
            
            sum = aBit + bBit + carry
            res = str(sum % 2) + res
            carry = sum // 2

            i -= 1
            
        return "1" + res if carry else res
        
# Approach 3:
class Solution:
    def addBinary(self, a: str, b: str) -> str:
        carry = 0
        result = ''

        a = list(a)
        b = list(b)

        while a or b or carry:
            if a:
                carry += int(a.pop())
            if b:
                carry += int(b.pop())

            result += str(carry %2)
            carry //= 2

        return result[::-1]
