** 6. Zigzag Conversion **

# Approach 1:
class Solution:
    def convert(self, s: str, numRows: int) -> str:
        if numRows == 1:
            return s
            
        row_arr = [""] * numRows
        row_idx = 1
        going_up = True

        for ch in s:
            row_arr[row_idx-1] += ch
            if row_idx == numRows:
                going_up = False
            elif row_idx == 1:
                going_up = True
            
            if going_up:
                row_idx += 1
            else:
                row_idx -= 1
        
        return "".join(row_arr)

# Approach 2:
class Solution:
    def convert(self, s: str, numRows: int) -> str:
        if numRows < 2:
            return s
        i = 0
        res = [""]*numRows      # We will fill in each line in the zigzag
        for letter in s:
            if i == numRows-1:  # If this is the last line in the zigzag we go up
                grow = False
            elif i == 0:        #Otherwise we go down
                grow = True 
            res[i] += letter    #Add the letter to its row
            i = (i+1) if grow else i-1  # We increment (add 1) if grow is True, 
			                            # and decrement otherwise
										
        return "".join(res)     # return the joined rows

# Approach 3:
class Solution:
    def convert(self, s: str, numRows: int) -> str:
        """
        p (0)      a(4)      h(9)         n(13)
        a (1) p(3) l(6) s(8) i(10) i(12)  g(14)
        y (2)      i(7)      r(11)
        """
        if numRows==1:return s
        period= 2*(numRows -1)
        d={i:i if i<numRows else (period-i) for i in range(period)}
        lines=["" for i in range(numRows)]
        for i in range(len(s)):
            lines[d[i%period]] +=s[i]
        return "".join(lines)
        
# Approach 4:
class Solution:
    def convert(self, s: str, n: int) -> str:
        if(n==1):
            return s
        ans=["" for i in range(n)]
        x=0
        bl=True
        for i in range(len(s)):
            if(bl and x==n):
                bl=False
                x-=1
            if(not bl and x==0):
                x+=1
                bl=True
            if(bl):
                ans[x]+=s[i]
                x+=1
            else:
                x-=1
                ans[x]+=s[i]
        s=""
        for i in ans:
            s+=i
        return s
        
