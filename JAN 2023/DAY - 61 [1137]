** 1137. N-th Tribonacci Number **

# Appraoch 1:
class Solution:
    def tribonacci(self, n: int) -> int:
    	a, b, c = 0, 1, 1
    	for i in range(n): 
            a, b, c = b, c, a + b + c
    	return a
      
# Approach 2:
class Solution:
    def tribonacci(self, n: int) -> int:
        # Memorization approach
        import collections
        memo = collections.defaultdict(int)
        memo[0], memo[1], memo[2] = 0,1,1
        for i in range(3,n+1):
            memo[i] = memo[i-1] + memo[i-2] + memo[i-3]
        return memo[n]
        
# Approach 3:
class Solution:
    def tribonacci(self, n: int) -> int:
        dp = [0, 1, 1]
        for i in range(3, n + 1):
            dp[i % 3] = sum(dp)
        return dp[n % 3]
