** 539. Minimum Time Difference **

# Approach 1:
class Solution:
    def findMinDifference(self, timePoints: List[str]) -> int:
        tab = []
        for i in timePoints:
            tab.append(int(i[0:2]) * 60 + int(i[3:]))
        tab.sort()
        n = len(tab)
        res = 1440 + tab[0] - tab[n-1]
        for i in range(1,n):
            res = min(res,(tab[i] - tab[i-1]))
        return res    

# Approach 2:
class Solution:
    def findMinDifference(self, timePoints: List[str]) -> int:
        vec = []
        for timePoint in timePoints:
            h, m = map(int, timePoint.split(':'))
            mins = h * 60 + m
            vec.append(mins)
        
        vec.sort()
        
        res = float('inf')
        for i in range(1, len(vec)):
            res = min(vec[i] - vec[i - 1], res)
        
        return min(res, 1440 + vec[0] - vec[-1])
