** 2028. Find Missing Observations **

# Approach 1:
class Solution:
    def missingRolls(self, rolls: List[int], mean: int, n: int) -> List[int]:
        sumOfN = mean * (n + len(rolls)) - sum(rolls)

        if n > sumOfN or sumOfN > n * 6:
            return []

        answer = []
        elementsToFill = n
        
        while elementsToFill > 0:
            newElement = sumOfN // elementsToFill
            answer.append(newElement)
            elementsToFill -= 1
            sumOfN -= newElement
        
        return answer

# Approach 2:
class Solution:
    def missingRolls(self, rolls: List[int], mean: int, n: int) -> List[int]:
        target = mean * (len(rolls)+n) - sum(rolls)
        if target < n or target > 6*n: return []
        a, b = divmod(target, n)
        return [a]*(n-b) + [a+1]*b
