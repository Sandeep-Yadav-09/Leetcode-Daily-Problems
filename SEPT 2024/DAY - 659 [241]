** 241. Different Ways to Add Parentheses **

# Approach 1:
class Solution:
    def diffWaysToCompute(self, expression: str) -> List[int]:
        ops = {
            "+": lambda x, y : x + y,
            "-": lambda x, y : x - y,
            "*": lambda x, y : x * y
        }
        res = []
        for x, char in enumerate(expression):
            if char in ops:
                leftResults = self.diffWaysToCompute(expression[:x])
                rightResults = self.diffWaysToCompute(expression[x + 1:])
                
                for leftNum in leftResults:
                    for rightNum in rightResults:
                        res.append(ops[char](leftNum, rightNum))
        
        if not res:
            res.append(int(expression))
        return res

# Approach 2:
class Solution:
    def diffWaysToCompute(self, expression: str) -> List[int]:
        result = []
        operators = "*-+"
        isNumber = True
        for op in operators:
            if op in expression:
                isNumber = False
        if isNumber:
            return [int(expression)]
        for i,c in enumerate(expression):
            if c in operators:
                res1 = self.diffWaysToCompute(expression[:i])
                res2 = self.diffWaysToCompute(expression[i + 1:])
                for r1 in res1:
                    for r2 in res2:
                        result.append(eval(str(r1) + c + str(r2)))
        return result
