** 1239. Maximum Length of a Concatenated String with Unique Characters **

# Approach 1:
class Solution:
    def maxLength(self, arr: List[str]) -> int:
        unique = []
        for s in arr:
            u = set(s)
            if len(u) == len(s): unique.append(u)
        concat = [set()]
        for u in unique:
            for c in concat:
                if not c & u:
                    concat.append(c | u)
        
        return max(len(cc) for cc in concat)

# Approach 2:
class Solution:
    def maxLength(self, arr: List[str]) -> int:
        
        uniqELements = ['']
        maximum = 0
        for i in range(len(arr)):
            sz = len(uniqELements)
            for j in range(sz):
                x=arr[i]+uniqELements[j]
                if (len(x)==len(set(x))):
                    uniqELements.append(x)
                    maximum = max(maximum,len(x))
        return maximum
		
