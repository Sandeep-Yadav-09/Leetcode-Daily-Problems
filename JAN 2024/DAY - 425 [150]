** 150. Evaluate Reverse Polish Notation **

# Approach 1:
class Solution:
    def evalRPN(self, tokens: List[str]) -> int:
        stack = []
        for i in tokens:
            if i=='+':
                stack.append(stack.pop() + stack.pop())
            elif i=='-':
                a,b = stack.pop(),stack.pop()
                stack.append(b-a)
            elif i=='*':
                a,b = stack.pop(),stack.pop()
                stack.append(a*b)
            elif i=='/':
                a,b = stack.pop(),stack.pop()
                stack.append(int(b/a))
            else:
                stack.append(int(i))
        return stack[0]

# Approach 2:
class Solution:
    def evalRPN(self, tokens: List[str]) -> int:
        
        def update(sign):
            n2,n1=stack.pop(),stack.pop()
            if sign=="+": return n1+n2
            if sign=="-": return n1-n2
            if sign=="*": return n1*n2
            if sign=="/": return int(n1/n2)
			
        stack=[]
        
        for n in tokens:
            if n.isdigit() or len(n)>1:
                stack.append(int(n))
            else:
                stack.append(update(n))
        return stack.pop()
